<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.appspot.yoga1290.popularmoviesapp" >

    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
    <uses-permission android:name="android.permission.INTERNET"/>

    <!-- WRITE_SYNC_SETTINGS for turning On sync -->
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS"/>
    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >
        <activity
            android:name=".MainActivity"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity
            android:name=".DetailActivity"
            android:parentActivityName=".MainActivity"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity
            android:name=".SettingsActivity"
            android:parentActivityName=".MainActivity"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>



        <provider
            android:name=".model.ContentProvider"
            android:authorities="com.appspot.yoga1290.popularmoviesapp"
            android:label="@string/provider_label"
            android:enabled="true"
            android:syncable="true"
            android:exported="false" >
        </provider>


        <!--<receiver android:name=".PostSyncBroadcastReciever">-->
            <!--<intent-filter>-->
                <!--<action android:name="com.tutorialspoint.CUSTOM_INTENT">-->
                <!--</action>-->
            <!--</intent-filter>-->
        <!--</receiver>-->




        <!-- This service implements our SyncAdapter. It needs to be exported, so that the system
               sync framework can access it. -->
        <service android:name=".sync.SyncService"
            android:exported="true"
            android:process=":sync">
            <!-- This intent filter is required. It allows the system to launch our sync service
            as needed. -->
            <intent-filter>
                <action android:name="android.content.SyncAdapter" />
            </intent-filter>
            <!-- This points to a required XML file which describes our SyncAdapter. -->
            <meta-data android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter" />
        </service>
        <!-- This implements the account we'll use as an attachment point for our SyncAdapter. Since
		        our SyncAdapter doesn't need to authenticate the current user (it just fetches a public RSS
		        feed), this account's implementation is largely empty.

		        It's also possible to attach a SyncAdapter to an existing account provided by another
		        package. In that case, this element could be omitted here. -->
        <service android:name=".sync.AuthenticatorService">
            <!-- Required filter used by the system to launch our account service. -->
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>
            <!-- This points to an XMLf ile which describes our account service. -->
            <meta-data android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service>


    </application>

</manifest>
